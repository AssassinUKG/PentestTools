import time
import getpass
import requests

# Disable nasty ssl warnings
requests.packages.urllib3.disable_warnings()

# Ask for Nessus URL
#url=input('Full URL: ')
#print('Using Nessus located under ' + url)
url='https://localhost:8834'

# Authenticate
u=input('Username: ')
p=getpass.getpass('Password: ')
r=requests.post(url+'/session', json={'username':u,'password':p}, verify=False)
if r.ok != True:
    print('Error getting token. Exiting...')
    exit()
token=r.json()['token']

# Get all folders
print("Reading folders...")
r=requests.get(url+'/folders', headers={'X-Cookie':'token='+token}, verify=False)
if r.ok != True:
    print('Error reading folder list. Exiting...')
    exit()
for folder in r.json()['folders']:
    print("ID: "+str(folder['id'])+"\tName: "+folder['name'])

# Read folder id
fid=input('Please enter the folder ID you would like to export: ')

# Ask for format
fmt=input('Please enter the format to export (nessus,html,pdf,csv,db): ')

# Ask for output
out=input('Please enter the folder where to output: ')
if out[-1:] != '/':
    out=out+'/'

# Loop through all scans, start the download and save them
r=requests.get(url+'/scans?folder_id='+str(fid), headers={'X-Cookie':'token='+token}, verify=False)
if r.ok != True:
    print('Error reading scans. Exiting...')
    exit()
for scan in r.json()['scans']:
    print('Downloading scan ' + scan['name'] + '...')
    r2=requests.post(url+'/scans/'+str(scan['id'])+'/export', headers={'X-Cookie':'token='+token}, json={'format':fmt,'chapters':'vuln_by_plugin'}, verify=False)
    if r2.ok != True:
        print('Error downloading scan. Continuing...')
        continue
    ret='nok'
    while ret != 'ready':
        time.sleep(1)
        ret=requests.get(url+'/scans/'+str(scan['id'])+'/export/'+str(r2.json()['file'])+'/status', headers={'X-Cookie':'token='+token}, verify=False).json()['status']
    r3=requests.get(url+'/scans/'+str(scan['id'])+'/export/'+str(r2.json()['file'])+'/download', headers={'X-Cookie':'token='+token}, verify=False)
    if r3.ok != True:
        print('Error downloading file. Continuing...')
        continue
    fn=out+r3.headers['Content-Disposition'][22:-1]
    print('Saving file as '+fn)
    with open(fn, 'wb') as f:
        f.write(r3.content)
        f.flush()
        f.close()
    print('Saved file as '+fn)
